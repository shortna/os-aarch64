!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/box/code/c/system_stuff/aarch64/kernel/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
ADDRESS_SPACE_KERNEL_SIZE	./src/mmu.c	/^#define ADDRESS_SPACE_KERNEL_SIZE /;"	d	file:
ADDRESS_SPACE_TYPE	./include/drivers/mmu/mmu.h	/^enum ADDRESS_SPACE_TYPE {$/;"	g
ADDRESS_SPACE_USER_SIZE	./src/mmu.c	/^#define ADDRESS_SPACE_USER_SIZE /;"	d	file:
ALLIGN	./include/bits.h	/^#define ALLIGN(/;"	d
APB_CLOCK	./src/k.c	/^#define APB_CLOCK /;"	d	file:
BIT	./include/types.h	/^#define BIT(/;"	d
BREAKPOINT	./include/types.h	/^#define BREAKPOINT(/;"	d
BlockEntry4KB	./src/mmu.c	/^struct BlockEntry4KB {$/;"	s	file:
CLRLPIR	./include/drivers/gic/gic_internal.h	/^  volatile u64 CLRLPIR;                                           \/* +0x0048 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
CLRSPI_NSR	./include/drivers/gic/gic_internal.h	/^  volatile u32 CLRSPI_NSR;                                         \/* +0x0048 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
CLRSPI_SR	./include/drivers/gic/gic_internal.h	/^  volatile u32 CLRSPI_SR;                                          \/* +0x0058 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
CPENDSGIR	./include/drivers/gic/gic_internal.h	/^  volatile u32 CPENDSGIR[4];                                       \/* +0x0F10 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[4]
CR	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 CR;                                                  \/* +0x00C *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
CR	./include/drivers/uart/uart_internal.h	/^  volatile u32 CR;                                                  \/* +0x030 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
CTLR	./include/drivers/gic/gic_internal.h	/^  volatile u32 CTLR;                                               \/* +0x0000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
CTLR	./include/drivers/gic/gic_internal.h	/^  volatile u32 CTLR;                                              \/* +0x0000 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u32
CellID0	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 CellID0;                                       \/* +0xFF0 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
CellID0	./include/drivers/uart/uart_internal.h	/^  const volatile u32 CellID0;                                       \/* +0xFF0 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
CellID1	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 CellID1;                                       \/* +0xFF4 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
CellID1	./include/drivers/uart/uart_internal.h	/^  const volatile u32 CellID1;                                       \/* +0xFF4 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
CellID2	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 CellID2;                                       \/* +0xFF8 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
CellID2	./include/drivers/uart/uart_internal.h	/^  const volatile u32 CellID2;                                       \/* +0xFF8 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
CellID3	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 CellID3;                                       \/* +0xFFC *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
CellID3	./include/drivers/uart/uart_internal.h	/^  const volatile u32 CellID3;                                       \/* +0xFFC *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
DAY	./include/drivers/rtc/rtc.h	/^#define DAY /;"	d
DESCRIPTOR_BLOCK	./src/mmu.c	/^  DESCRIPTOR_BLOCK    = 0x2, \/\/ if table level != 3, otherwise RESERVED$/;"	e	enum:DESCRIPTOR_TYPE	file:
DESCRIPTOR_INVALID	./src/mmu.c	/^  DESCRIPTOR_INVALID  = 0x0, \/\/ bit [1] doesnt matter bit [0] always 0$/;"	e	enum:DESCRIPTOR_TYPE	file:
DESCRIPTOR_PAGE	./src/mmu.c	/^  DESCRIPTOR_PAGE     = 0x3, \/\/ if table level == 3,$/;"	e	enum:DESCRIPTOR_TYPE	file:
DESCRIPTOR_RESERVED	./src/mmu.c	/^  DESCRIPTOR_RESERVED = 0x2, \/\/ if table level == 3$/;"	e	enum:DESCRIPTOR_TYPE	file:
DESCRIPTOR_TABLE	./src/mmu.c	/^  DESCRIPTOR_TABLE    = 0x3, \/\/ if table level != 3, otherwise PAGE$/;"	e	enum:DESCRIPTOR_TYPE	file:
DESCRIPTOR_TYPE	./src/mmu.c	/^enum DESCRIPTOR_TYPE {$/;"	g	file:
DEVICES	./include/drivers/virtio/virtio_internal.h	/^static const struct Device DEVICES[] = {$/;"	v	typeref:typename:const struct Device[]
DEVICE_TYPE	./include/drivers.h	/^enum DEVICE_TYPE {$/;"	g
DMACR	./include/drivers/uart/uart_internal.h	/^  volatile u32 DMACR;                                               \/* +0x048 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
DR	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 DR;                                            \/* +0x000 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
DR	./include/drivers/uart/uart_internal.h	/^  volatile u32 DR;                                                  \/* +0x000 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
DT_NONE	./include/drivers.h	/^  DT_NONE,$/;"	e	enum:DEVICE_TYPE
DT_RTC	./include/drivers.h	/^  DT_RTC,$/;"	e	enum:DEVICE_TYPE
DT_TIMER	./include/drivers.h	/^  DT_TIMER,$/;"	e	enum:DEVICE_TYPE
DT_UART	./include/drivers.h	/^  DT_UART,$/;"	e	enum:DEVICE_TYPE
DT_VIRTIO	./include/drivers.h	/^  DT_VIRTIO,$/;"	e	enum:DEVICE_TYPE
Device	./include/drivers/virtio/virtio_internal.h	/^struct Device {$/;"	s
Driver	./src/drivers.c	/^struct Driver {$/;"	s	file:
FBRD	./include/drivers/uart/uart_internal.h	/^  volatile u32 FBRD;                                                \/* +0x028 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
FR	./include/drivers/uart/uart_internal.h	/^  const volatile u32 FR;                                            \/* +0x018 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
GENMASK	./include/bits.h	/^#define GENMASK(/;"	d
GICD	./include/drivers/gic/gic.h	/^typedef struct GICDv3 *GICD;$/;"	t	typeref:struct:GICDv3 *
GICD_BASE_ADDRESS	./src/k.c	/^#define GICD_BASE_ADDRESS /;"	d	file:
GICD_IROUTER	./include/drivers/gic/gic_internal.h	/^  volatile u64 GICD_IROUTER[1024];                                 \/* +0x6000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u64[1024]
GICD_IROUTER_E	./include/drivers/gic/gic_internal.h	/^  volatile u64 GICD_IROUTER_E[1024];                               \/* +0x8000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u64[1024]
GICDv3	./include/drivers/gic/gic_internal.h	/^struct GICDv3 {$/;"	s
GICR	./include/drivers/gic/gic.h	/^typedef struct GICRv3 *GICR;$/;"	t	typeref:struct:GICRv3 *
GICR_BASE_ADDRESS	./src/k.c	/^#define GICR_BASE_ADDRESS /;"	d	file:
GICRv3	./include/drivers/gic/gic_internal.h	/^struct GICRv3 {$/;"	s
GICV3_EDGE_TRIGGERED	./include/drivers/gic/gic.h	/^#define GICV3_EDGE_TRIGGERED /;"	d
GICV3_GROUP0	./include/drivers/gic/gic.h	/^#define GICV3_GROUP0 /;"	d
GICV3_GROUP1_NON_SECURE	./include/drivers/gic/gic.h	/^#define GICV3_GROUP1_NON_SECURE /;"	d
GICV3_GROUP1_SECURE	./include/drivers/gic/gic.h	/^#define GICV3_GROUP1_SECURE /;"	d
GICV3_LEVEL_SENSITIVE	./include/drivers/gic/gic.h	/^#define GICV3_LEVEL_SENSITIVE /;"	d
GICv3RedistributorLpis	./include/drivers/gic/gic_internal.h	/^struct GICv3RedistributorLpis {$/;"	s
GICv3RedistributorSgis	./include/drivers/gic/gic_internal.h	/^struct GICv3RedistributorSgis {$/;"	s
GLOBAL_VARIABLES	./include/types.h	/^#define GLOBAL_VARIABLES /;"	d
GRANULARITY_16KB	./include/drivers/mmu/mmu.h	/^  GRANULARITY_16KB = 0x1,$/;"	e	enum:GRANULARITY_TYPE
GRANULARITY_4KB	./include/drivers/mmu/mmu.h	/^  GRANULARITY_4KB = 0x2,$/;"	e	enum:GRANULARITY_TYPE
GRANULARITY_64KB	./include/drivers/mmu/mmu.h	/^  GRANULARITY_64KB = 0x3,$/;"	e	enum:GRANULARITY_TYPE
GRANULARITY_TYPE	./include/drivers/mmu/mmu.h	/^enum GRANULARITY_TYPE {$/;"	g
HOUR	./include/drivers/rtc/rtc.h	/^#define HOUR /;"	d
IBRD	./include/drivers/uart/uart_internal.h	/^  volatile u32 IBRD;                                                \/* +0x024 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
ICACTIVER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICACTIVER[32];                                      \/* +0x0380 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ICACTIVER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICACTIVER[3];                                       \/* +0x0380 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ICACTIVER_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICACTIVER_E[128];                                   \/* +0x1C00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ICENABLER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICENABLER[32];                                      \/* +0x0180 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ICENABLER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICENABLER[3];                                       \/* +0x0180 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ICENABLER_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICENABLER_E[128];                                   \/* +0x1400 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ICFGR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICFGR[64];                                          \/* +0x0C00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[64]
ICFGR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICFGR[6];                                           \/* +0x0C00 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[6]
ICFGR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICFGR_E[256];                                       \/* +0x3000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[256]
ICPENDR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICPENDR[32];                                        \/* +0x0280 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ICPENDR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICPENDR[3];                                         \/* +0x0280 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ICPENDR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ICPENDR_E[128];                                     \/* +0x1800 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ICR	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 ICR;                                                 \/* +0x01C *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
ICR	./include/drivers/uart/uart_internal.h	/^  volatile u32 ICR;                                                 \/* +0x044 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
IFLS	./include/drivers/uart/uart_internal.h	/^  volatile u32 IFLS;                                                \/* +0x034 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
IGROUPR	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGROUPR[32];                                        \/* +0x0080 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
IGROUPR	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGROUPR[3];                                         \/* +0x0080 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
IGROUPR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGROUPR_E[128];                                     \/* +0x1000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
IGRPMODR	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGRPMODR[32];                                       \/* +0x0D00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
IGRPMODR	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGRPMODR[3];                                        \/* +0x0D00 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
IGRPMODR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 IGRPMODR_E[128];                                    \/* +0x3400 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
IIDR	./include/drivers/gic/gic_internal.h	/^  const volatile u32 IIDR;                                         \/* +0x0008 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
IIDR	./include/drivers/gic/gic_internal.h	/^  const volatile u32 IIDR;                                        \/* +0x0004 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u32
IMPLEMENTATION_DEFINED	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED[16336];                       \/* +0xC000 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u8[16336]
IMPLEMENTATION_DEFINED_0	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED_0[8];                        \/* +0x0100 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u8[8]
IMPLEMENTATION_DEFINED_1	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED_1[16336];                     \/* +0xC000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u8[16336]
IMPLEMENTATION_DEFINED_1	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED_1[8];                        \/* +0x0110 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u8[8]
IMPLEMENTATION_DEFINED_2	./include/drivers/gic/gic_internal.h	/^  const volatile u8 IMPLEMENTATION_DEFINED_2[48];                  \/* +0xFFD0 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[48]
IMPLEMENTATION_DEFINED_2	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED_2[16336];                    \/* +0xC000 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u8[16336]
IMPLEMENTATION_DEFINED_3	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMENTATION_DEFINED_3[48];                       \/* +0xFFD0 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u8[48]
IMPLEMETATION_DEFINED_0	./include/drivers/gic/gic_internal.h	/^  volatile u8 IMPLEMETATION_DEFINED_0[32];                         \/* +0x0020 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u8[32]
IMSC	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 IMSC;                                                \/* +0x010 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
IMSC	./include/drivers/uart/uart_internal.h	/^  volatile u32 IMSC;                                                \/* +0x038 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
INMIR	./include/drivers/gic/gic_internal.h	/^  volatile u32 INMIR[32];                                          \/* +0x0F80 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
INMIR	./include/drivers/gic/gic_internal.h	/^  volatile u32 INMIR[32];                                          \/* +0x0F80 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[32]
INMIR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 INMIR_E[32];                                        \/* +0x3B00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
INVALLR	./include/drivers/gic/gic_internal.h	/^  volatile u64 INVALLR;                                           \/* +0x00B0 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
INVLPIR	./include/drivers/gic/gic_internal.h	/^  volatile u64 INVLPIR;                                           \/* +0x00A0 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
IPRIORITYR	./include/drivers/gic/gic_internal.h	/^  volatile u8 IPRIORITYR[1024];                                    \/* +0x0400 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u8[1024]
IPRIORITYR	./include/drivers/gic/gic_internal.h	/^  volatile u8 IPRIORITYR[96];                                      \/* +0x0400 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u8[96]
IPRIORITYR_E	./include/drivers/gic/gic_internal.h	/^  volatile u8 IPRIORITYR_E[4096];                                  \/* +0x2000 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u8[4096]
ISACTIVER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISACTIVER[32];                                      \/* +0x0300 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ISACTIVER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISACTIVER[3];                                       \/* +0x0300 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ISACTIVER_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISACTIVER_E[128];                                   \/* +0x1A00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ISENABLER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISENABLER[32];                                      \/* +0x0100 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ISENABLER	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISENABLER[3];                                       \/* +0x0100 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ISENABLER_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISENABLER_E[128];                                   \/* +0x1200 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ISPENDR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISPENDR[32];                                        \/* +0x0200 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[32]
ISPENDR	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISPENDR[3];                                         \/* +0x0200 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32[3]
ISPENDR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 ISPENDR_E[128];                                     \/* +0x1600 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[128]
ITARGETSR	./include/drivers/gic/gic_internal.h	/^  volatile u8 ITARGETSR[1024];                                     \/* +0x0800 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u8[1024]
ITCR	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 ITCR;                                                \/* +0x080 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
ITIP	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 ITIP;                                                \/* +0x084 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
ITIP	./include/drivers/uart/uart_internal.h	/^  volatile u32 ITIP;                                                \/* +0x084 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
ITOP	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 ITOP;                                                \/* +0x088 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
ITOP	./include/drivers/uart/uart_internal.h	/^  volatile u32 ITOP;                                                \/* +0x088 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
InterruptParameters	./include/drivers/gic/gic.h	/^struct InterruptParameters {$/;"	s
InvalidEntry4KB	./src/mmu.c	/^struct InvalidEntry4KB {$/;"	s	file:
KERNEL_SPACE	./include/drivers/mmu/mmu.h	/^  KERNEL_SPACE = 0x1,$/;"	e	enum:ADDRESS_SPACE_TYPE
LCRH	./include/drivers/uart/uart_internal.h	/^  volatile u32 LCRH;                                                \/* +0x02C *\/$/;"	m	struct:UART	typeref:typename:volatile u32
LEVEL_0_ADDRESSABLE_PER_ENTRY	./src/mmu.c	/^#define LEVEL_0_ADDRESSABLE_PER_ENTRY /;"	d	file:
LEVEL_1_ADDRESSABLE_PER_ENTRY	./src/mmu.c	/^#define LEVEL_1_ADDRESSABLE_PER_ENTRY /;"	d	file:
LEVEL_2_ADDRESSABLE_PER_ENTRY	./src/mmu.c	/^#define LEVEL_2_ADDRESSABLE_PER_ENTRY /;"	d	file:
LEVEL_3_ADDRESSABLE_PER_ENTRY	./src/mmu.c	/^#define LEVEL_3_ADDRESSABLE_PER_ENTRY /;"	d	file:
LR	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 LR;                                                  \/* +0x008 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
MINUTE	./include/drivers/rtc/rtc.h	/^#define MINUTE /;"	d
MIS	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 MIS;                                           \/* +0x018 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
MIS	./include/drivers/uart/uart_internal.h	/^  const volatile u32 MIS;                                           \/* +0x040 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
MPAMIDR	./include/drivers/gic/gic_internal.h	/^  const volatile u32 MPAMIDR;                                     \/* +0x0018 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u32
MR	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 MR;                                                  \/* +0x004 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
NSACR	./include/drivers/gic/gic_internal.h	/^  volatile u32 NSACR;                                              \/* +0x0E00 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:volatile u32
NSACR	./include/drivers/gic/gic_internal.h	/^  volatile u32 NSACR[64];                                          \/* +0x0E00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[64]
NSACR_E	./include/drivers/gic/gic_internal.h	/^  volatile u32 NSACR_E[64];                                        \/* +0x3600 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[64]
N_DRIVERS	./src/drivers.c	/^#define N_DRIVERS /;"	d	file:
PAGE_SIZE	./src/mmu.c	/^#define PAGE_SIZE /;"	d	file:
PARTIDR	./include/drivers/gic/gic_internal.h	/^  volatile u32 PARTIDR;                                           \/* +0x001C *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u32
PENDBASER	./include/drivers/gic/gic_internal.h	/^  volatile u64 PENDBASER;                                         \/* +0x0078 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
PROPBASER	./include/drivers/gic/gic_internal.h	/^  volatile u64 PROPBASER;                                         \/* +0x0070 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
PageEntry4KB	./src/mmu.c	/^struct PageEntry4KB {$/;"	s	file:
PeriphID0	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 PeriphID0;                                     \/* +0xFE0 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
PeriphID0	./include/drivers/uart/uart_internal.h	/^  const volatile u32 PeriphID0;                                     \/* +0xFE0 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
PeriphID1	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 PeriphID1;                                     \/* +0xFE4 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
PeriphID1	./include/drivers/uart/uart_internal.h	/^  const volatile u32 PeriphID1;                                     \/* +0xFE4 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
PeriphID2	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 PeriphID2;                                     \/* +0xFE8 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
PeriphID2	./include/drivers/uart/uart_internal.h	/^  const volatile u32 PeriphID2;                                     \/* +0xFE8 *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
PeriphID3	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 PeriphID3;                                     \/* +0xFEC *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
PeriphID3	./include/drivers/uart/uart_internal.h	/^  const volatile u32 PeriphID3;                                     \/* +0xFFC *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
RIS	./include/drivers/rtc/rtc_internal.h	/^  const volatile u32 RIS;                                           \/* +0x014 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u32
RIS	./include/drivers/uart/uart_internal.h	/^  const volatile u32 RIS;                                           \/* +0x03C *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
RSR_ESR	./include/drivers/uart/uart_internal.h	/^  volatile u32 RSR_ESR;                                             \/* +0x004 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
RTC	./include/drivers/rtc/rtc.h	/^typedef struct RTC *RTC;$/;"	t	typeref:struct:RTC *
RTC	./include/drivers/rtc/rtc_internal.h	/^struct RTC {$/;"	s
RTC_BASE_ADDRESS	./src/k.c	/^#define RTC_BASE_ADDRESS /;"	d	file:
RTC_IM_CLR_MASK	./include/drivers/rtc/rtc_internal.h	/^#define RTC_IM_CLR_MASK /;"	d
RTC_IM_SET_MASK	./include/drivers/rtc/rtc_internal.h	/^#define RTC_IM_SET_MASK /;"	d
RTC_INT_CLR	./include/drivers/rtc/rtc_internal.h	/^#define RTC_INT_CLR /;"	d
SETLPIR	./include/drivers/gic/gic_internal.h	/^  volatile u64 SETLPIR;                                           \/* +0x0040 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u64
SETSPI_NSR	./include/drivers/gic/gic_internal.h	/^  volatile u32 SETSPI_NSR;                                         \/* +0x0040 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
SETSPI_SR	./include/drivers/gic/gic_internal.h	/^  volatile u32 SETSPI_SR;                                          \/* +0x0050 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
SGIR	./include/drivers/gic/gic_internal.h	/^  volatile u32 SGIR;                                               \/* +0x0F00 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
SPENDSGIR	./include/drivers/gic/gic_internal.h	/^  volatile u32 SPENDSGIR[4];                                       \/* +0x0F20 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32[4]
STATUSR	./include/drivers/gic/gic_internal.h	/^  volatile u32 STATUSR;                                            \/* +0x0010 *\/$/;"	m	struct:GICDv3	typeref:typename:volatile u32
STATUSR	./include/drivers/gic/gic_internal.h	/^  volatile u32 STATUSR;                                           \/* +0x0010 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u32
SYNCR	./include/drivers/gic/gic_internal.h	/^  volatile u32 SYNCR;                                             \/* +0x00C0 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u32
TABLE_ENTRY_SIZE	./src/mmu.c	/^#define TABLE_ENTRY_SIZE /;"	d	file:
TABLE_SIZE	./src/mmu.c	/^#define TABLE_SIZE /;"	d	file:
TCOUNT	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 TCOUNT;                                              \/* +0x090 *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
TCR	./include/drivers/uart/uart_internal.h	/^  volatile u32 TCR;                                                 \/* +0x080 *\/$/;"	m	struct:UART	typeref:typename:volatile u32
TDR	./include/drivers/uart/uart_internal.h	/^  volatile u32 TDR;                                                 \/* +0x08C *\/$/;"	m	struct:UART	typeref:typename:volatile u32
TOFFSET	./include/drivers/rtc/rtc_internal.h	/^  volatile u32 TOFFSET;                                             \/* +0x08C *\/$/;"	m	struct:RTC	typeref:typename:volatile u32
TYPER	./include/drivers/gic/gic_internal.h	/^  const volatile u32 TYPER;                                        \/* +0x0004 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
TYPER	./include/drivers/gic/gic_internal.h	/^  const volatile u32 TYPER[2];                                    \/* +0x0008 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u32[2]
TYPER2	./include/drivers/gic/gic_internal.h	/^  const volatile u32 TYPER2;                                       \/* +0x000C *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
TableEntry4KB	./src/mmu.c	/^struct TableEntry4KB {$/;"	s	file:
U16	./include/types.h	/^#define U16(/;"	d
U32	./include/types.h	/^#define U32(/;"	d
U64	./include/types.h	/^#define U64(/;"	d
U8	./include/types.h	/^#define U8(/;"	d
UART	./include/drivers/uart/uart.h	/^typedef struct UART *UART;$/;"	t	typeref:struct:UART *
UART	./include/drivers/uart/uart_internal.h	/^struct UART {$/;"	s
UARTILPR	./include/drivers/uart/uart_internal.h	/^  volatile u32 UARTILPR;                                            \/* +0x020 *\/   $/;"	m	struct:UART	typeref:typename:volatile u32
UART_BASE_ADDRESS	./src/k.c	/^#define UART_BASE_ADDRESS /;"	d	file:
UART_BAUD_RATE	./src/k.c	/^#define UART_BAUD_RATE /;"	d	file:
UART_CLOCK	./src/k.c	/^#define UART_CLOCK /;"	d	file:
UART_CR_CTSEn	./include/drivers/uart/uart_internal.h	/^#define UART_CR_CTSEn /;"	d
UART_CR_DTR	./include/drivers/uart/uart_internal.h	/^#define UART_CR_DTR /;"	d
UART_CR_LBE	./include/drivers/uart/uart_internal.h	/^#define UART_CR_LBE /;"	d
UART_CR_OUT1	./include/drivers/uart/uart_internal.h	/^#define UART_CR_OUT1 /;"	d
UART_CR_OUT2	./include/drivers/uart/uart_internal.h	/^#define UART_CR_OUT2 /;"	d
UART_CR_RTS	./include/drivers/uart/uart_internal.h	/^#define UART_CR_RTS /;"	d
UART_CR_RTSEn	./include/drivers/uart/uart_internal.h	/^#define UART_CR_RTSEn /;"	d
UART_CR_RXE	./include/drivers/uart/uart_internal.h	/^#define UART_CR_RXE /;"	d
UART_CR_SIREN	./include/drivers/uart/uart_internal.h	/^#define UART_CR_SIREN /;"	d
UART_CR_SIRLP	./include/drivers/uart/uart_internal.h	/^#define UART_CR_SIRLP /;"	d
UART_CR_TXE	./include/drivers/uart/uart_internal.h	/^#define UART_CR_TXE /;"	d
UART_CR_UARTEN	./include/drivers/uart/uart_internal.h	/^#define UART_CR_UARTEN /;"	d
UART_DMACR_DMAONERR	./include/drivers/uart/uart_internal.h	/^#define UART_DMACR_DMAONERR /;"	d
UART_DMACR_RXDMAE	./include/drivers/uart/uart_internal.h	/^#define UART_DMACR_RXDMAE /;"	d
UART_DMACR_TXDMAE	./include/drivers/uart/uart_internal.h	/^#define UART_DMACR_TXDMAE /;"	d
UART_DR_BE	./include/drivers/uart/uart_internal.h	/^#define UART_DR_BE /;"	d
UART_DR_FE	./include/drivers/uart/uart_internal.h	/^#define UART_DR_FE /;"	d
UART_DR_OE	./include/drivers/uart/uart_internal.h	/^#define UART_DR_OE /;"	d
UART_DR_PE	./include/drivers/uart/uart_internal.h	/^#define UART_DR_PE /;"	d
UART_ESR_BE	./include/drivers/uart/uart_internal.h	/^#define UART_ESR_BE /;"	d
UART_ESR_FE	./include/drivers/uart/uart_internal.h	/^#define UART_ESR_FE /;"	d
UART_ESR_OE	./include/drivers/uart/uart_internal.h	/^#define UART_ESR_OE /;"	d
UART_ESR_PE	./include/drivers/uart/uart_internal.h	/^#define UART_ESR_PE /;"	d
UART_FR_BUSY	./include/drivers/uart/uart_internal.h	/^#define UART_FR_BUSY /;"	d
UART_FR_CTS	./include/drivers/uart/uart_internal.h	/^#define UART_FR_CTS /;"	d
UART_FR_DCD	./include/drivers/uart/uart_internal.h	/^#define UART_FR_DCD /;"	d
UART_FR_DSR	./include/drivers/uart/uart_internal.h	/^#define UART_FR_DSR /;"	d
UART_FR_RI	./include/drivers/uart/uart_internal.h	/^#define UART_FR_RI /;"	d
UART_FR_RXFE	./include/drivers/uart/uart_internal.h	/^#define UART_FR_RXFE /;"	d
UART_FR_RXFF	./include/drivers/uart/uart_internal.h	/^#define UART_FR_RXFF /;"	d
UART_FR_TXFE	./include/drivers/uart/uart_internal.h	/^#define UART_FR_TXFE /;"	d
UART_FR_TXFF	./include/drivers/uart/uart_internal.h	/^#define UART_FR_TXFF /;"	d
UART_ICR_BEIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_BEIC /;"	d
UART_ICR_CTSMIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_CTSMIC /;"	d
UART_ICR_DCDMIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_DCDMIC /;"	d
UART_ICR_DSRMIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_DSRMIC /;"	d
UART_ICR_FEIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_FEIC /;"	d
UART_ICR_OEIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_OEIC /;"	d
UART_ICR_PEIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_PEIC /;"	d
UART_ICR_RIMIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_RIMIC /;"	d
UART_ICR_RTIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_RTIC /;"	d
UART_ICR_RXIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_RXIC /;"	d
UART_ICR_TXIC	./include/drivers/uart/uart_internal.h	/^#define UART_ICR_TXIC /;"	d
UART_IFLS_RX_1_2	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_RX_1_2 /;"	d
UART_IFLS_RX_1_4	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_RX_1_4 /;"	d
UART_IFLS_RX_1_8	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_RX_1_8 /;"	d
UART_IFLS_RX_3_4	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_RX_3_4 /;"	d
UART_IFLS_RX_7_8	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_RX_7_8 /;"	d
UART_IFLS_TX_1_2	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_TX_1_2 /;"	d
UART_IFLS_TX_1_4	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_TX_1_4 /;"	d
UART_IFLS_TX_1_8	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_TX_1_8 /;"	d
UART_IFLS_TX_3_4	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_TX_3_4 /;"	d
UART_IFLS_TX_7_8	./include/drivers/uart/uart_internal.h	/^#define UART_IFLS_TX_7_8 /;"	d
UART_IMSC_BEIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_BEIM /;"	d
UART_IMSC_CTSMIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_CTSMIM /;"	d
UART_IMSC_DCDMIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_DCDMIM /;"	d
UART_IMSC_DSRMIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_DSRMIM /;"	d
UART_IMSC_FEIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_FEIM /;"	d
UART_IMSC_OEIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_OEIM /;"	d
UART_IMSC_PEIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_PEIM /;"	d
UART_IMSC_RIMIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_RIMIM /;"	d
UART_IMSC_RTIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_RTIM /;"	d
UART_IMSC_RXIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_RXIM /;"	d
UART_IMSC_TXIM	./include/drivers/uart/uart_internal.h	/^#define UART_IMSC_TXIM /;"	d
UART_INT_BEIM	./include/drivers/uart/uart.h	/^  UART_INT_BEIM = 9,$/;"	e	enum:UART_INT_TYPE
UART_INT_CTSMI	./include/drivers/uart/uart.h	/^  UART_INT_CTSMI = 1,$/;"	e	enum:UART_INT_TYPE
UART_INT_DCDMI	./include/drivers/uart/uart.h	/^  UART_INT_DCDMI = 2,$/;"	e	enum:UART_INT_TYPE
UART_INT_DSRMI	./include/drivers/uart/uart.h	/^  UART_INT_DSRMI = 3,$/;"	e	enum:UART_INT_TYPE
UART_INT_FEIM	./include/drivers/uart/uart.h	/^  UART_INT_FEIM = 7,$/;"	e	enum:UART_INT_TYPE
UART_INT_NONE	./include/drivers/uart/uart.h	/^  UART_INT_NONE = 11,$/;"	e	enum:UART_INT_TYPE
UART_INT_OEIM	./include/drivers/uart/uart.h	/^  UART_INT_OEIM = 10,$/;"	e	enum:UART_INT_TYPE
UART_INT_PEIM	./include/drivers/uart/uart.h	/^  UART_INT_PEIM = 8,$/;"	e	enum:UART_INT_TYPE
UART_INT_RIMIM	./include/drivers/uart/uart.h	/^  UART_INT_RIMIM = 0,$/;"	e	enum:UART_INT_TYPE
UART_INT_RTIM	./include/drivers/uart/uart.h	/^  UART_INT_RTIM = 6,$/;"	e	enum:UART_INT_TYPE
UART_INT_RXIM	./include/drivers/uart/uart.h	/^  UART_INT_RXIM = 4,$/;"	e	enum:UART_INT_TYPE
UART_INT_TXIM	./include/drivers/uart/uart.h	/^  UART_INT_TXIM = 5,$/;"	e	enum:UART_INT_TYPE
UART_INT_TYPE	./include/drivers/uart/uart.h	/^enum UART_INT_TYPE {$/;"	g
UART_LCRH_BRK	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_BRK /;"	d
UART_LCRH_EPS	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_EPS /;"	d
UART_LCRH_FEN	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_FEN /;"	d
UART_LCRH_PEN	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_PEN /;"	d
UART_LCRH_SPS	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_SPS /;"	d
UART_LCRH_STP2	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_STP2 /;"	d
UART_LCRH_WLEN5	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_WLEN5 /;"	d
UART_LCRH_WLEN6	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_WLEN6 /;"	d
UART_LCRH_WLEN7	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_WLEN7 /;"	d
UART_LCRH_WLEN8	./include/drivers/uart/uart_internal.h	/^#define UART_LCRH_WLEN8 /;"	d
UART_MIS_BEMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_BEMIS /;"	d
UART_MIS_CTSMMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_CTSMMIS /;"	d
UART_MIS_DCDMMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_DCDMMIS /;"	d
UART_MIS_DSRMMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_DSRMMIS /;"	d
UART_MIS_FEMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_FEMIS /;"	d
UART_MIS_OEMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_OEMIS /;"	d
UART_MIS_PEMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_PEMIS /;"	d
UART_MIS_RIMMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_RIMMIS /;"	d
UART_MIS_RTMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_RTMIS /;"	d
UART_MIS_RXMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_RXMIS /;"	d
UART_MIS_TXMIS	./include/drivers/uart/uart_internal.h	/^#define UART_MIS_TXMIS /;"	d
UART_RIS_BERIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_BERIS /;"	d
UART_RIS_CTSRMIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_CTSRMIS /;"	d
UART_RIS_DCDRMIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_DCDRMIS /;"	d
UART_RIS_DSRRMIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_DSRRMIS /;"	d
UART_RIS_FERIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_FERIS /;"	d
UART_RIS_OERIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_OERIS /;"	d
UART_RIS_PERIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_PERIS /;"	d
UART_RIS_RIRMIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_RIRMIS /;"	d
UART_RIS_RTRIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_RTRIS /;"	d
UART_RIS_RXRIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_RXRIS /;"	d
UART_RIS_TXRIS	./include/drivers/uart/uart_internal.h	/^#define UART_RIS_TXRIS /;"	d
UART_RSR_BE	./include/drivers/uart/uart_internal.h	/^#define UART_RSR_BE /;"	d
UART_RSR_FE	./include/drivers/uart/uart_internal.h	/^#define UART_RSR_FE /;"	d
UART_RSR_OE	./include/drivers/uart/uart_internal.h	/^#define UART_RSR_OE /;"	d
UART_RSR_PE	./include/drivers/uart/uart_internal.h	/^#define UART_RSR_PE /;"	d
USER_SPACE	./include/drivers/mmu/mmu.h	/^  USER_SPACE = 0x0,$/;"	e	enum:ADDRESS_SPACE_TYPE
VIRTIO_CONSOLE_ADDRESS	./src/k.c	/^#define VIRTIO_CONSOLE_ADDRESS /;"	d	file:
VIRTIO_CONSOLE_F_EMERG_WRITE	./include/drivers/virtio/virtio.h	/^#define VIRTIO_CONSOLE_F_EMERG_WRITE /;"	d
VIRTIO_CONSOLE_F_MULTIPORT	./include/drivers/virtio/virtio.h	/^#define VIRTIO_CONSOLE_F_MULTIPORT /;"	d
VIRTIO_CONSOLE_F_SIZE	./include/drivers/virtio/virtio.h	/^#define VIRTIO_CONSOLE_F_SIZE /;"	d
VIRTIO_MAGIC	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_MAGIC /;"	d
VIRTIO_STATUS_ACKNOWLEDGE	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_ACKNOWLEDGE /;"	d
VIRTIO_STATUS_DEVICE_NEEDS_RESET	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_DEVICE_NEEDS_RESET /;"	d
VIRTIO_STATUS_DRIVER	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_DRIVER /;"	d
VIRTIO_STATUS_DRIVER_OK	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_DRIVER_OK /;"	d
VIRTIO_STATUS_FAILED	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_FAILED /;"	d
VIRTIO_STATUS_FEATURES_OK	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_STATUS_FEATURES_OK /;"	d
VIRTIO_VERSION	./include/drivers/virtio/virtio_internal.h	/^#define VIRTIO_VERSION /;"	d
VIRTQ_AVAIL_F_NO_INTERRUPT	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_AVAIL_F_NO_INTERRUPT /;"	d
VIRTQ_DESC_F_INDIRECT	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_DESC_F_INDIRECT /;"	d
VIRTQ_DESC_F_NEXT	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_DESC_F_NEXT /;"	d
VIRTQ_DESC_F_WRITE	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_DESC_F_WRITE /;"	d
VIRTQ_USED_BUFFER	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_USED_BUFFER /;"	d
VIRTQ_USED_F_NO_NOTIFY	./include/drivers/virtio/virtio_internal.h	/^#define VIRTQ_USED_F_NO_NOTIFY /;"	d
VirtQueueAvail	./include/drivers/virtio/virtio_internal.h	/^struct VirtQueueAvail {$/;"	s
VirtQueueDesc	./include/drivers/virtio/virtio_internal.h	/^struct VirtQueueDesc {$/;"	s
VirtQueueUsed	./include/drivers/virtio/virtio_internal.h	/^struct VirtQueueUsed {$/;"	s
VirtQueueUsedElem	./include/drivers/virtio/virtio_internal.h	/^struct VirtQueueUsedElem {$/;"	s
Virtio	./include/drivers/virtio/virtio_internal.h	/^struct Virtio {$/;"	s
VirtioDevice	./include/drivers/virtio/virtio.h	/^typedef struct Virtio *VirtioDevice;$/;"	t	typeref:struct:Virtio *
VirtioMMIO	./include/drivers/virtio/virtio_internal.h	/^struct VirtioMMIO {$/;"	s
WAKER	./include/drivers/gic/gic_internal.h	/^  volatile u32 WAKER;                                             \/* +0x0014 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:volatile u32
_BITS_H	./include/bits.h	/^#define _BITS_H$/;"	d
_DRIVERS_H	./include/drivers.h	/^#define _DRIVERS_H$/;"	d
_GIC_DEFS_H	./include/drivers/gic/gic_internal.h	/^#define _GIC_DEFS_H$/;"	d
_GIC_H	./include/drivers/gic/gic.h	/^#define _GIC_H$/;"	d
_MMU_H	./include/drivers/mmu/mmu.h	/^#define _MMU_H$/;"	d
_RTC_DEFS_H	./include/drivers/rtc/rtc_internal.h	/^#define _RTC_DEFS_H$/;"	d
_RTC_H	./include/drivers/rtc/rtc.h	/^#define _RTC_H$/;"	d
_TIMER_PHYSICAL_H	./include/drivers/time_physical.h	/^#define _TIMER_PHYSICAL_H$/;"	d
_TYPES_H	./include/types.h	/^#define _TYPES_H$/;"	d
_UART_DEFS_H	./include/drivers/uart/uart_internal.h	/^#define _UART_DEFS_H$/;"	d
_UART_H	./include/drivers/uart/uart.h	/^#define _UART_H$/;"	d
_VIRTIO_DEFS_H	./include/drivers/virtio/virtio_internal.h	/^#define _VIRTIO_DEFS_H$/;"	d
_VIRTIO_H	./include/drivers/virtio/virtio.h	/^#define _VIRTIO_H$/;"	d
__anonef86ed3e0108	./include/drivers/virtio/virtio_internal.h	/^  struct {$/;"	s	struct:Virtio
addr	./include/drivers/virtio/virtio_internal.h	/^  u64 addr;$/;"	m	struct:VirtQueueDesc	typeref:typename:u64
affinity	./include/drivers/gic/gic.h	/^  u32 affinity;$/;"	m	struct:InterruptParameters	typeref:typename:u32
attributes	./src/mmu.c	/^  u8 attributes             : 5;$/;"	m	struct:TableEntry4KB	typeref:typename:u8:5	file:
bits_clear	./include/bits.h	/^static inline u64 bits_clear(u64 value, u8 start_bit, u8 width) {$/;"	f	typeref:typename:u64
bits_rotate_u16	./include/bits.h	/^static inline u16 bits_rotate_u16(u16 value) {$/;"	f	typeref:typename:u16
bits_rotate_u32	./include/bits.h	/^static inline u32 bits_rotate_u32(u64 value) {$/;"	f	typeref:typename:u32
bits_rotate_u64	./include/bits.h	/^static inline u64 bits_rotate_u64(u64 value) {$/;"	f	typeref:typename:u64
config	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 config[0x40];                  \/* +0x100 RW *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32[0x40]
config_generation	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 config_generation;       \/* +0x0FC R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
d	./src/drivers.c	/^  void *d;$/;"	m	struct:Driver	typeref:typename:void *	file:
device_features	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 device_features;         \/* +0x010 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
device_features_selector	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 device_features_selector;      \/* +0x014 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
device_id	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 device_id;               \/* +0x008 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
driver_add	./src/drivers.c	/^void driver_add(enum DEVICE_TYPE t, void *d, u32 int_id) {$/;"	f	typeref:typename:void
driver_features	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 driver_features;               \/* +0x020 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
driver_features_selector	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 driver_features_selector;      \/* +0x024 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
driver_get	./src/drivers.c	/^enum DEVICE_TYPE driver_get(void **d, u32 int_id) {$/;"	f	typeref:enum:DEVICE_TYPE
drivers	./src/drivers.c	/^__attribute__((section(".data"))) static struct Driver drivers[N_DRIVERS];$/;"	v	typeref:struct:Driver[]	file:
drivers_count	./src/drivers.c	/^__attribute__((section(".data"))) static u8 drivers_count = 0;$/;"	v	typeref:typename:u8	file:
flags	./include/drivers/virtio/virtio_internal.h	/^  u16 flags;$/;"	m	struct:VirtQueueAvail	typeref:typename:u16
flags	./include/drivers/virtio/virtio_internal.h	/^  u16 flags;$/;"	m	struct:VirtQueueDesc	typeref:typename:u16
flags	./include/drivers/virtio/virtio_internal.h	/^  u16 flags;$/;"	m	struct:VirtQueueUsed	typeref:typename:u16
gen_table	./src/mmu.c	/^void* gen_table(void *address, u8 start_level, u16 table_entries[4]) {$/;"	f	typeref:typename:void *
get_distributor	./src/gic.c	/^GICD get_distributor(u64 gicd_base) { return (GICD)gicd_base; }$/;"	f	typeref:typename:GICD
get_redistributor	./src/gic.c	/^GICR get_redistributor(u64 gicr_base, u32 redist_id) {$/;"	f	typeref:typename:GICR
get_redistributor_id	./src/gic.c	/^u32 get_redistributor_id(u64 base_address, u32 affinity) {$/;"	f	typeref:typename:u32
gic_init	./src/gic.c	/^u8 gic_init(GICD dist) {$/;"	f	typeref:typename:u8
handle	./src/int_handle.c	/^void handle(void) {$/;"	f	typeref:typename:void
i16	./include/types.h	/^typedef int16_t i16;$/;"	t	typeref:typename:int16_t
i32	./include/types.h	/^typedef int32_t i32;$/;"	t	typeref:typename:int32_t
i64	./include/types.h	/^typedef int64_t i64;$/;"	t	typeref:typename:int64_t
i8	./include/types.h	/^typedef int8_t i8;$/;"	t	typeref:typename:int8_t
id	./include/drivers/virtio/virtio_internal.h	/^  u32 id;$/;"	m	struct:VirtQueueUsedElem	typeref:typename:u32
id	./include/drivers/virtio/virtio_internal.h	/^  u64 id;$/;"	m	struct:Device	typeref:typename:u64
idx	./include/drivers/virtio/virtio_internal.h	/^  u16 idx;$/;"	m	struct:VirtQueueAvail	typeref:typename:u16
idx	./include/drivers/virtio/virtio_internal.h	/^  u16 idx;$/;"	m	struct:VirtQueueUsed	typeref:typename:u16
ignored_0	./src/mmu.c	/^  u64 ignored_0             : 62;$/;"	m	struct:InvalidEntry4KB	typeref:typename:u64:62	file:
ignored_0	./src/mmu.c	/^  u8 ignored_0              : 8;$/;"	m	struct:TableEntry4KB	typeref:typename:u8:8	file:
ignored_1	./src/mmu.c	/^  u16 ignored_1             : 10;$/;"	m	struct:TableEntry4KB	typeref:typename:u16:10	file:
init	./include/drivers/virtio/virtio_internal.h	/^  bool (*init)(struct Virtio *, u64);$/;"	m	struct:Device	typeref:typename:bool (*)(struct Virtio *,u64)
int_enable	./src/gic.c	/^void int_enable(GICD dist, GICR redist, u32 int_id) {$/;"	f	typeref:typename:void
int_id	./src/drivers.c	/^  u32 int_id;$/;"	m	struct:Driver	typeref:typename:u32	file:
int_set_group	./src/gic.c	/^void int_set_group(GICD dist, GICR redist, u32 int_id, u8 security) {$/;"	f	typeref:typename:void
int_set_priority	./src/gic.c	/^void int_set_priority(GICD dist, GICR redist, u32 int_id, u8 priority) {$/;"	f	typeref:typename:void
int_set_route	./src/gic.c	/^void int_set_route(GICD dist, u32 int_id, u32 affinity) {$/;"	f	typeref:typename:void
int_set_triger	./src/gic.c	/^void int_set_triger(GICD dist, GICR redist, u32 int_id, u8 triger) {$/;"	f	typeref:typename:void
interrupt_acknowledge	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 interrupt_acknowledge;         \/* +0x064 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
interrupt_status	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 interrupt_status;        \/* +0x060 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
kmain	./src/k.c	/^void kmain(u64 fdt_address) {$/;"	f	typeref:typename:void
len	./include/drivers/virtio/virtio_internal.h	/^  u32 len;$/;"	m	struct:VirtQueueDesc	typeref:typename:u32
len	./include/drivers/virtio/virtio_internal.h	/^  u32 len;$/;"	m	struct:VirtQueueUsedElem	typeref:typename:u32
lower_attributes	./src/mmu.c	/^  u16 lower_attributes      : 10;$/;"	m	struct:BlockEntry4KB	typeref:typename:u16:10	file:
lower_attributes	./src/mmu.c	/^  u16 lower_attributes      : 10;$/;"	m	struct:PageEntry4KB	typeref:typename:u16:10	file:
lpis	./include/drivers/gic/gic_internal.h	/^  struct GICv3RedistributorLpis lpis __attribute__((aligned(0x10000)));$/;"	m	struct:GICRv3	typeref:struct:GICv3RedistributorLpis
magic	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 magic;                   \/* +0x000 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
max_n_queues	./include/drivers/virtio/virtio_internal.h	/^  u32 max_n_queues;$/;"	m	struct:Virtio	typeref:typename:u32
mmu_init_translation_table	./src/mmu.c	/^void mmu_init_translation_table(enum ADDRESS_SPACE_TYPE as) {$/;"	f	typeref:typename:void
n_elements	./include/drivers/virtio/virtio_internal.h	/^    u32 n_elements;$/;"	m	struct:Virtio::__anonef86ed3e0108	typeref:typename:u32
n_queues	./include/drivers/virtio/virtio_internal.h	/^  u32 n_queues;$/;"	m	struct:Virtio	typeref:typename:u32
next	./include/drivers/virtio/virtio_internal.h	/^  u16 next;$/;"	m	struct:VirtQueueDesc	typeref:typename:u16
next_level	./src/mmu.c	/^  u64 next_level            : 36;$/;"	m	struct:TableEntry4KB	typeref:typename:u64:36	file:
nt	./src/mmu.c	/^  u8 nt                     : 1;$/;"	m	struct:BlockEntry4KB	typeref:typename:u8:1	file:
output_address	./src/mmu.c	/^  u32 output_address        : 27; \/\/ for level 1 only upper 17bits valid, for level 2 all 27 a/;"	m	struct:BlockEntry4KB	typeref:typename:u32:27	file:
output_address	./src/mmu.c	/^  u64 output_address        : 36;$/;"	m	struct:PageEntry4KB	typeref:typename:u64:36	file:
padding0	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding0[32];                                 \/* +0x0020 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[32]
padding1	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding1[32];                                 \/* +0x0050 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[32]
padding2	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding2[32];                                 \/* +0x0080 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[32]
padding3	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding3[8];                                  \/* +0x00A8 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[8]
padding4	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding4[8];                                  \/* +0x00B8 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[8]
padding5	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding5[60];                                 \/* +0x00C4 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[60]
padding6	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding6[8];                                  \/* +0x0108 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[8]
padding7	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding7[48872];                              \/* +0x0118 *\/$/;"	m	struct:GICv3RedistributorLpis	typeref:typename:const volatile u8[48872]
padding_0	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_0[128];                                \/* +0x0000 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[128]
padding_0	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_0[12];                                 \/* +0x0014 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[12]
padding_0	./include/drivers/rtc/rtc_internal.h	/^  const volatile u8 padding_0[96];                                  \/* +0x020 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u8[96]
padding_0	./include/drivers/uart/uart_internal.h	/^  const volatile u8 padding_0[16];                                  \/* +0x008 *\/$/;"	m	struct:UART	typeref:typename:const volatile u8[16]
padding_0	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_0[8];             \/* +0x018    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_1	./include/drivers/gic/gic_internal.h	/^  const volatile u32 padding_1;                                    \/* +0x0044 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
padding_1	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_1[116];                                \/* +0x008C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_1	./include/drivers/rtc/rtc_internal.h	/^  const volatile u8 padding_1[3916];                                \/* +0x094 *\/$/;"	m	struct:RTC	typeref:typename:const volatile u8[3916]
padding_1	./include/drivers/uart/uart_internal.h	/^  const volatile u32 padding_1;                                     \/* +0x01C *\/$/;"	m	struct:UART	typeref:typename:const volatile u32
padding_1	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_1[8];             \/* +0x028    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_10	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_10[244];                               \/* +0x0D0C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[244]
padding_10	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_10[9344];                              \/* +0x3B80 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[9344]
padding_10	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_10[54];           \/* +0x0C4    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[54]
padding_11	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_11[380];                               \/* +0x0E04 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[380]
padding_11	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_11[8192];                              \/* +0xA000 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[8192]
padding_12	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_12[45056];                             \/* +0x1000 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[45056]
padding_13	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_13[48];                                \/* +0xFFD0 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[48]
padding_2	./include/drivers/gic/gic_internal.h	/^  const volatile u32 padding_2;                                    \/* +0x004C *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
padding_2	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_2[116];                                \/* +0x010C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_2	./include/drivers/uart/uart_internal.h	/^  const volatile u8 padding_2[52];                                  \/* +0x04C *\/$/;"	m	struct:UART	typeref:typename:const volatile u8[52]
padding_2	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_2[8];             \/* +0x03C    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_3	./include/drivers/gic/gic_internal.h	/^  const volatile u32 padding_3;                                    \/* +0x0054 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u32
padding_3	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_3[116];                                \/* +0x018C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_3	./include/drivers/uart/uart_internal.h	/^  const volatile u8 padding_3[3920];                                \/* +0x090 *\/$/;"	m	struct:UART	typeref:typename:const volatile u8[3920]
padding_3	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_3[8];             \/* +0x048    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_4	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_4[116];                                \/* +0x020C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_4	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_4[36];                                 \/* +0x005C *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[36]
padding_4	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_4[12];            \/* +0x054    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[12]
padding_5	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_5[116];                                \/* +0x028C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_5	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_5[128];                                \/* +0x0D80 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[128]
padding_5	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_5[8];             \/* +0x068    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_6	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_6[116];                                \/* +0x030C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_6	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_6[12];                                 \/* +0x0F04 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[12]
padding_6	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_6[12];            \/* +0x074    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[12]
padding_7	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_7[116];                                \/* +0x038C *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[116]
padding_7	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_7[80];                                 \/* +0x0F30 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[80]
padding_7	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_7[8];             \/* +0x088    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_8	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_8[1952];                               \/* +0x0460 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[1952]
padding_8	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_8[512];                                \/* +0x1E00 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[512]
padding_8	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_8[8];             \/* +0x098    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[8]
padding_9	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_9[1024];                               \/* +0x3700 *\/$/;"	m	struct:GICDv3	typeref:typename:const volatile u8[1024]
padding_9	./include/drivers/gic/gic_internal.h	/^  const volatile u8 padding_9[232];                                \/* +0x0C18 *\/$/;"	m	struct:GICv3RedistributorSgis	typeref:typename:const volatile u8[232]
padding_9	./include/drivers/virtio/virtio_internal.h	/^  const volatile u8 padding_9[4];             \/* +0x0A8    *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u8[4]
priority	./include/drivers/gic/gic.h	/^  u8 priority;$/;"	m	struct:InterruptParameters	typeref:typename:u8
q	./include/drivers/virtio/virtio_internal.h	/^    void *q;$/;"	m	struct:Virtio::__anonef86ed3e0108	typeref:typename:void *
queue_desc_high	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_desc_high;               \/* +0x084 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_desc_low	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_desc_low;                \/* +0x080 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_device_high	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_device_high;             \/* +0x0A4 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_device_low	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_device_low;              \/* +0x0A0 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_driver_high	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_driver_high;             \/* +0x094 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_driver_low	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_driver_low;              \/* +0x090 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_notify	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_notify;                  \/* +0x050 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_num	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_num;                     \/* +0x038 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_num_max	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 queue_num_max;           \/* +0x034 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
queue_ready	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_ready;                   \/* +0x044 RW *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_reset	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_reset;                   \/* +0x0C0 RW *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queue_selector	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 queue_selector;                \/* +0x030 W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
queues	./include/drivers/virtio/virtio_internal.h	/^  } queues[];$/;"	m	struct:Virtio	typeref:struct:Virtio::__anonef86ed3e0108[]
register_interrupt	./src/gic.c	/^void register_interrupt(GICD dist, GICR redist, u32 int_id,$/;"	f	typeref:typename:void
registers	./include/drivers/virtio/virtio_internal.h	/^  struct VirtioMMIO *registers;$/;"	m	struct:Virtio	typeref:struct:VirtioMMIO *
res0	./src/mmu.c	/^  u8 res0                   : 2;$/;"	m	struct:PageEntry4KB	typeref:typename:u8:2	file:
res0	./src/mmu.c	/^  u8 res0                   : 3;$/;"	m	struct:TableEntry4KB	typeref:typename:u8:3	file:
res0_0	./src/mmu.c	/^  u8 res0_0                 : 2;$/;"	m	struct:BlockEntry4KB	typeref:typename:u8:2	file:
res0_1	./src/mmu.c	/^  u8 res0_1                 : 4;$/;"	m	struct:BlockEntry4KB	typeref:typename:u8:4	file:
res0_2	./src/mmu.c	/^  u8 res0_2                 : 4;$/;"	m	struct:BlockEntry4KB	typeref:typename:u8:4	file:
ring	./include/drivers/virtio/virtio_internal.h	/^  struct VirtQueueUsedElem ring[]; \/\/ u16 avail_event always last element in this array$/;"	m	struct:VirtQueueUsed	typeref:struct:VirtQueueUsedElem[]
ring	./include/drivers/virtio/virtio_internal.h	/^  u16 ring[]; \/\/ u16 used_event is always last element in this array$/;"	m	struct:VirtQueueAvail	typeref:typename:u16[]
route	./include/drivers/gic/gic.h	/^  bool route;$/;"	m	struct:InterruptParameters	typeref:typename:bool
rtc	./src/rtc.c	/^RTC rtc(u64 rtc_base) { $/;"	f	typeref:typename:RTC
rtc_add_offset	./src/rtc.c	/^void rtc_add_offset(RTC r, u32 offset) {$/;"	f	typeref:typename:void
rtc_clear_interrupt	./src/rtc.c	/^void rtc_clear_interrupt(RTC r) { $/;"	f	typeref:typename:void
rtc_disable_interrupt	./src/rtc.c	/^void rtc_disable_interrupt(RTC r) {$/;"	f	typeref:typename:void
rtc_enable_interrupt	./src/rtc.c	/^void rtc_enable_interrupt(RTC r) {$/;"	f	typeref:typename:void
rtc_get_current	./src/rtc.c	/^u32 rtc_get_current(RTC r) {$/;"	f	typeref:typename:u32
rtc_reset	./src/rtc.c	/^void rtc_reset(RTC r) {$/;"	f	typeref:typename:void
rtc_set_match	./src/rtc.c	/^void rtc_set_match(RTC r, u32 match_value) {$/;"	f	typeref:typename:void
security	./include/drivers/gic/gic.h	/^  u8 security;$/;"	m	struct:InterruptParameters	typeref:typename:u8
sgis	./include/drivers/gic/gic_internal.h	/^  struct GICv3RedistributorSgis sgis __attribute__((aligned(0x10000)));$/;"	m	struct:GICRv3	typeref:struct:GICv3RedistributorSgis
shared_memory_base_high	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 shared_memory_base_high; \/* +0x0BC R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
shared_memory_base_low	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 shared_memory_base_low;  \/* +0x0B8 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
shared_memory_id	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 shared_memory_id;              \/* +0x0AC W  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
shared_memory_len_high	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 shared_memory_len_high;  \/* +0x0B4 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
shared_memory_len_low	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 shared_memory_len_low;   \/* +0x0B0 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
status	./include/drivers/virtio/virtio_internal.h	/^  volatile u32 status;                        \/* +0x070 RW *\/$/;"	m	struct:VirtioMMIO	typeref:typename:volatile u32
triger	./include/drivers/gic/gic.h	/^  u8 triger;$/;"	m	struct:InterruptParameters	typeref:typename:u8
type	./src/drivers.c	/^  enum DEVICE_TYPE type;$/;"	m	struct:Driver	typeref:enum:DEVICE_TYPE	file:
type	./src/mmu.c	/^  enum DESCRIPTOR_TYPE type : 2;$/;"	m	struct:BlockEntry4KB	typeref:enum:DESCRIPTOR_TYPE:2	file:
type	./src/mmu.c	/^  enum DESCRIPTOR_TYPE type : 2;$/;"	m	struct:InvalidEntry4KB	typeref:enum:DESCRIPTOR_TYPE:2	file:
type	./src/mmu.c	/^  enum DESCRIPTOR_TYPE type : 2;$/;"	m	struct:PageEntry4KB	typeref:enum:DESCRIPTOR_TYPE:2	file:
type	./src/mmu.c	/^  enum DESCRIPTOR_TYPE type : 2;$/;"	m	struct:TableEntry4KB	typeref:enum:DESCRIPTOR_TYPE:2	file:
u16	./include/types.h	/^typedef uint16_t u16;$/;"	t	typeref:typename:uint16_t
u32	./include/types.h	/^typedef uint32_t u32;$/;"	t	typeref:typename:uint32_t
u64	./include/types.h	/^typedef uint64_t u64;$/;"	t	typeref:typename:uint64_t
u8	./include/types.h	/^typedef uint8_t u8;$/;"	t	typeref:typename:uint8_t
uart_clear_interrupt	./src/uart.c	/^void uart_clear_interrupt(UART u, enum UART_INT_TYPE t) {$/;"	f	typeref:typename:void
uart_disable	./src/uart.c	/^void uart_disable(UART u) {$/;"	f	typeref:typename:void
uart_disable_interrupt	./src/uart.c	/^void uart_disable_interrupt(UART u, enum UART_INT_TYPE t) {$/;"	f	typeref:typename:void
uart_enable	./src/uart.c	/^void uart_enable(UART u) { u->CR |= UART_CR_UARTEN; }$/;"	f	typeref:typename:void
uart_enable_interrupt	./src/uart.c	/^void uart_enable_interrupt(UART u, enum UART_INT_TYPE t) {$/;"	f	typeref:typename:void
uart_get_interrupt	./src/uart.c	/^enum UART_INT_TYPE uart_get_interrupt(UART u) {$/;"	f	typeref:enum:UART_INT_TYPE
uart_init	./src/uart.c	/^UART uart_init(u64 uart_base) {$/;"	f	typeref:typename:UART
uart_set_baud_rate	./src/uart.c	/^void uart_set_baud_rate(UART u, u64 uart_clock, u64 baud_rate) {$/;"	f	typeref:typename:void
uart_write	./src/uart.c	/^void uart_write(UART u, const u8 *data, u32 size) {$/;"	f	typeref:typename:void
uart_write_byte	./src/uart.c	/^void uart_write_byte(UART u, u8 data) { u->DR |= data; }$/;"	f	typeref:typename:void
upper_attributes	./src/mmu.c	/^  u16 upper_attributes      : 14;$/;"	m	struct:BlockEntry4KB	typeref:typename:u16:14	file:
upper_attributes	./src/mmu.c	/^  u16 upper_attributes      : 14;$/;"	m	struct:PageEntry4KB	typeref:typename:u16:14	file:
vendor_id	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 vendor_id;               \/* +0x00C R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
version	./include/drivers/virtio/virtio_internal.h	/^  const volatile u32 version;                 \/* +0x004 R  *\/$/;"	m	struct:VirtioMMIO	typeref:typename:const volatile u32
wake_redistributor	./src/gic.c	/^void wake_redistributor(GICR redist) {$/;"	f	typeref:typename:void
